Question:-
https://www.pepcoding.com/resources/online-java-foundation/linked-lists/remove-first-linked-list-official/ojquestion

Code:-

#include<iostream>
#include <sstream> 
using namespace std;

class Node{
    public:
    int data;
    Node* next;
};
class LinkedList{
    public:
    Node* head;
    Node* tail;
    int sizee;
    
    LinkedList(){
        head=NULL;
        tail = NULL;
        sizee = 0;
    }

    void addLast(int val) {
        Node* temp = new Node();
        temp->data = val;
        temp->next = NULL;
        
        if(sizee==0){
            head = temp;
            tail = temp;
        }else{
            tail->next = temp;
            tail=temp;
        }
        sizee++;
    }
    int size(){
        return sizee;
    }
    void display(){
      for (Node* temp = head; temp != NULL; temp = temp->next) {
            cout<<temp->data<<" ";
        }  
        cout<<"\n";
    }
    void removeFirst() {
        if(head==NULL){
            cout<< "List is empty"<<"\n";
        }else if(sizee==1){
            head=NULL;
            tail=NULL;
            sizee--;
        }else{
            Node* ptr = head;
            head= ptr->next;
            ptr->next=NULL;
            ptr = NULL;
            sizee--;
        }
    }
};

int main(){
    LinkedList list;
    string str;
    getline(cin,str);
   // cout<<"string"<<str<<"";
    while (str.compare("quit") != 0){
        istringstream ss(str);
        
        string a[2];
        string word;
        int i=0;
        while(ss>>word){
            a[i]=word;
            i++;
        }

        istringstream sv(a[1]);
        if(a[0].compare("addLast")==0){
            int val;
            sv>>val;
            list.addLast(val);
        }else if(a[0].compare("size")==0){
            int val=list.size();
            cout<<val<<"\n";
        }else if(a[0].compare("display")==0){
            list.display();
        }else if(a[0].compare("removeFirst")==0){
            list.removeFirst();
        }
        getline(cin,str);
    }
    
    return 0;
}
