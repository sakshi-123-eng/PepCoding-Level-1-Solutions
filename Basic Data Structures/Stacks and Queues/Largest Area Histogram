Question:-
https://www.pepcoding.com/resources/online-java-foundation/stacks-and-queues/lah-official/ojquestion

Code:-

#include<bits/stdc++.h>
using namespace std;
int main(){
    int n;
    cin>>n;
    int arr[n];
    for(int i=0;i<n;i++){
        cin>>arr[i];
    }
    
    int rb[n]={0}; // next smaller element index on right
    stack<int>st;
    st.push(n-1);
    rb[n-1]=n;
    
    for(int i=n-2;i>=0;i--){
        while(st.size()>0 && arr[i]<=arr[st.top()]){
            st.pop();
        }
        
        if(st.size()==0){
            rb[i]=n;
        }else{
            rb[i]=st.top();
        }
        st.push(i);
    }
    
    int lb[n]={0}; // next smaller element index on left
    stack<int>ste;
    ste.push(0);
    lb[0]=-1;
    
    for(int i=1;i<n;i++){
        while(ste.size()>0 && arr[i]<=arr[ste.top()]){
            ste.pop();
        }
        
        if(ste.size()==0){
            lb[i]=-1;
        }else{
            lb[i]=ste.top();
        }
        ste.push(i);
    }
    
    // area
    
    int maxArea =0;
    for(int i=0;i<n;i++){
        int width = rb[i]-lb[i]-1;
        int area = arr[i]*width;
        if(area>maxArea){
            maxArea = area;
        }
    }
    cout<<maxArea;
    return 0;
}
