Question:-
https://www.pepcoding.com/resources/online-java-foundation/dynamic-programming-and-greedy/target-sum-subsets-dp-official/ojquestion

Code:-

#include <bits/stdc++.h> 
using namespace std;

int main(){
    int n,tar;
    cin>>n;
    int arr[n];
    for(int i = 0 ; i < n ;i++){
        cin>>arr[i];
    }
    cin>>tar;
    bool dp[n+1][tar+1];
    for(int i=0;i<n+1;i++){
        for(int j=0;j<tar+1;j++){
            dp[i][j]=false;
        }
    }
    for(int i=0;i<n+1;i++){
        for(int j=0;j<tar+1;j++){
            if(i==0 && j==0){
                dp[i][j]=true;
            }else if(i==0){
                dp[i][j]=false;
            }else if(j==0){
                dp[i][j]=true;
            }else{
                if(dp[i-1][j]==true){
                    dp[i][j]=true;
                }
                else{
                    int val = arr[i-1];
                    if(j>=val){
                    if(dp[i-1][j-val] == true){
                        dp[i][j]=true;
                    }
                }
                }
                
            }
        }
    }
    if(dp[n][tar]==true){
        cout<<"true";
    }else{
        cout<<"false";
    }
    
}
