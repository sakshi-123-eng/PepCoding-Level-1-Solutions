Question:-
https://www.pepcoding.com/resources/online-java-foundation/recursion-backtracking/knights-tour-official/ojquestion

Code:-

#include <bits/stdc++.h> 
using namespace std;

void displayBoard(vector<vector<int>>&chess){
    for(int i=0;i<chess.size();i++){
        for(int j=0;j<chess.size();j++){
            cout<<chess[i][j]<<" ";
        }
        cout<<"\n";
    }
    cout<<"\n";
}

void printKnightsTour(vector<vector<int>>&chess,int r , int c , int move){
    
    if(r<0 || c<0 || r>=chess.size() || c>=chess.size() || chess[r][c]>0){
        return;
    }else if(move == chess.size()*chess.size()){
        chess[r][c]=move;
        displayBoard(chess);
        chess[r][c]=0;
        return;
    }
    
    chess[r][c]=move;
    printKnightsTour(chess,r-2 , c+1 , move+1);
    printKnightsTour(chess,r-1 , c+2 , move+1);
    printKnightsTour(chess,r+1 , c+2 , move+1);
    printKnightsTour(chess,r+2 , c+1 , move+1);
    printKnightsTour(chess,r+2 , c-1 , move+1);
    printKnightsTour(chess,r+1 , c-2 , move+1);
    printKnightsTour(chess,r-1 , c-2 , move+1);
    printKnightsTour(chess,r-2 , c-1 , move+1);
    chess[r][c]=0;
    
}


int main(){
    int n, row , col;
    cin>>n>>row>>col;
    
    vector<vector<int>>chess(n,vector<int>(n,0));
    printKnightsTour(chess,row,col,1);
    
    
    return 0;
}
